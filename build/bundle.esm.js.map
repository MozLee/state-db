{"version":3,"file":"bundle.esm.js","sources":["../src/utils.js","../src/observer.js","../src/table.js","../src/db.js"],"sourcesContent":["const isArray = (v) => Object.prototype.toString.call(v) === \"[object Array]\"\nconst isObj = (v) => Object.prototype.toString.call(v) === \"[object Object]\"\nconst isFunction = (v) => Object.prototype.toString.call(v) === \"[object Function]\"\nconst isString = (v) => Object.prototype.toString.call(v) === \"[object String]\"\n\nconst getType = (v) => {\n    var typeStr = Object.prototype.toString.call(v);\n    return typeStr.replace('[object ', '').replace(']', '');\n}\nconst errorHanle = (type, e) => {\n\n}\n\nexport {isArray, isObj, isFunction, isString, getType, errorHanle}\n\n","import {isArray, isObj, isFunction} from './utils';\n\nclass Observer {\n    constructor() {\n        this.actions = [];\n    }\n\n    on = (name, fn) => {\n        if (isFunction(fn)) {\n            var actionArr = this.actions['on' + name]\n            if (isArray(actionArr) && !actionArr.includes(fn)) {\n                actionArr.push(fn);\n            }\n            else {\n                this.actions['on' + name] = [fn];\n            }\n        }\n    }\n\n    off = (name, fn) => {\n        var actionArr = this.actions['on' + name];\n        if (actionArr) {\n            if (!fn) {\n                actionArr = null;\n            }\n            else {\n                var index = actionArr.indexOf(fn);\n                if (index > -1) {\n                    actionArr.splice(index, 1);\n                }\n            }\n        }\n    }\n\n    trigger = (name, params) => {\n        const fnList = this.actions['on' + name];\n\n        if (fnList && fnList.length) {\n            for (var i = 0; i < fnList.length; i++) {\n                fnList[i](params);\n            }\n        }\n    }\n}\n\nexport default Observer","import {isArray, isObj, isFunction, isString, getType} from './utils';\nimport Observer from './observer';\n\n/*\n * 使用Symbol增强对属性的保护\n */\nconst store = Symbol('store');\nconst tmp = Symbol('tmp');\n\nclass Table {\n    constructor(opts={}) {\n        this.schema = opts.schema || false;\n        //暂未实现， loose: 不符合要求的行不插入，其他正常插入。 strict: 只要有不符合要求的都不允许插入。\n        this.schemaMode = opts.schemaMode || 'loose';\n        /*\n         * safe：深度clone default\n         * unsafe: 不处理,\n         * normal: 浅copy\n         */\n        this.saveMode = opts.saveMode || 'safe';\n        this.columns = [];\n\n        this[store] = [];\n        this.name = opts.name;\n        this.dbOpts = opts.dbOpts || {};\n        this.setPrimaryKey = () => {};\n        this.checkschema = () => true;\n        if (isObj(this.schema)) {\n            this.checkschema = (line) => {\n                for (var i in this.schema) {\n                    if (this.schema[i].required && line[i] === undefined) {\n                        return false;\n                    }\n                    if (this.schema[i].type && line[i] !== undefined){\n                        if (getType(line[i]) !== this.schema[i].type) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            };\n        }\n\n        if (isString(opts.primaryKey)) {\n            this.primaryKey = opts.primaryKey;\n        }\n        else if (isObj(opts.primaryKey)) {\n            this.primaryKey = primaryKey.name || 'key';\n            this.setPrimaryKey = (line, value) => {\n                let data = this[store];\n                let primaryKey = this.primaryKey;\n                if (!value) {\n                    if (data.length) {\n                        line[primaryKey] = data[data.length - 1][primaryKey] + 1;\n                    }\n                    else {\n                        line[primaryKey] = 1;\n                    }\n                }\n                else {\n                    line[primaryKey] = value;\n                }\n            }\n        }\n\n        //数组或者对象存入数据库之前的处理： safe：深度clone, unsafe: 不处理, normal: 浅copy\n        this._beforeSave = (obj) => {\n            if (this.saveMode === 'safe') {\n                return JSON.parse(JSON.stringify(obj));\n            }\n            else if (this.saveMode === 'unsafe') {\n                return obj;\n            }\n            if (isArray(obj)) {\n                return obj.concat([]);\n            }\n            else if (isObj(obj)) {\n                return Object.assign({}, obj);\n            }\n        }\n\n        this.register = new Observer();\n        if (isArray(opts.initValue)) {\n            this.init(opts.initValue);\n        }\n        else if (isObj(opts.initValue)) {\n            this.insert(opts.initValue);\n        }\n\n        this[tmp] = this[store];\n    }\n\n    /*\n     * 支持链式调用，但不支持多个where链式调用\n     */\n    where = (query) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return eval(query);\n        });\n        return this;\n    }\n\n    first = (n) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return index < n;\n        })\n        return this;\n    }\n\n    last = (n) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return index > this[store].length - n - 1;\n        })\n        return this;\n    }\n\n    /*\n     * 根据某一个字段的值进行默认行为排序\n     */\n    orderby = (column = primaryKey) => {\n        if (column) {\n            this[tmp].sort((a, b) => {\n                var columnA = a[column]\n                var columnB = b[column]\n                if (columnA < columnB) {\n                    return -1;\n                }\n                if (columnA > columnB) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /*\n     * 返回查找到的数组，如果没有字段名，则返回全部字段，如果有字段名，则返回指定字段\n     */\n    getValues = (columns) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        if (!columns) {\n            return JSON.parse(JSON.stringify(result));\n        }\n        else if (isArray(columns)) {\n            return JSON.parse(JSON.stringify(result)); //查指定字段名算法时间复杂度太高，暂不实现\n        }\n    }\n\n    /*\n     * 返回查询后数组长度\n     */\n    count = () => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        return result.length;\n    }\n\n    /*\n     * 返回整体数组长度\n     */\n    countAll = () => {\n        return this[store].length;\n    }\n\n    /*\n     * 初始化表,如果表在创建时指定了schema，需要对数组字段进行强校验\n     */\n    init = (arr = []) => {\n        var lines = this._beforeSave(arr);\n        this[store].length = 0;\n        lines.forEach((item) => {\n            if (this.checkschema(item)) {\n                this[store].push(item);\n            }\n        });\n        this.register.trigger(this.name); //触发更新广播\n        this.dbOpts.onChange('Table ' + this.name + ' init Success', this, 'init', lines);\n        return this;\n    }\n\n    /*\n     * 通用的插入单条方法，仅内部使用, 如果有指定key，则可能进行update操作\n     */\n    _insert = (line, key) => {\n        const data = this[store];\n        const filterKey = key || this.primaryKey;\n        if (this.checkschema(line)) {\n            this.setPrimaryKey(line);\n            if (!isString(filterKey)) {\n                data.push(line);\n                return true;\n            }\n            else {\n                for (let i = 0; i < data.length; i++) {\n                    if (data[i][filterKey] === line[filterKey]) {\n                        data[i] = line;\n                        return true\n                    }\n                }\n                data.push(line);\n                return true\n            }\n        }\n    }\n    /*\n     * 插入一条或多条数据, 如果有key, 则可能进行update操作\n     */\n    insert = (item, key) => {\n        if (isObj(item)) {\n            var line = this._beforeSave(item);\n            if (!this._insert(line, key)) {\n                this.dbOpts.onError('Insert item not match the schema.', item);\n            }\n            else {\n                this.register.trigger(this.name, {type: 'insert', count: 1, insertCount: 1});\n                this.dbOpts.onChange('Table ' + this.name + ' insert Success', this, 'init', item);\n            }\n        }\n        else if (isArray(item)) {\n            var lines = this._beforeSave(item);\n            var insertCount = 0;\n            lines.forEach(line => {\n                if (this._insert(line, key)) {\n                    insertCount += 1;\n                }\n            })\n            if (insertCount) {\n                this.register.trigger(this.name, {type: 'insert', count: item.length, insertCount: insertCount});\n            }\n            else {\n                this.dbOpts.onError('All Insert item not match the schema.', item);\n            }\n        }\n        else {\n            this.dbOpts.onError('Insert item type must be array or object', item);\n        }\n        return this;\n    }\n\n\n    /*\n     * 将where语句查询到的条目进行update, 但只update查到的第一条\n     */\n    update = (obj) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        if (result[0]) {\n            Object.keys(obj).forEach(key => result[0][key] = obj[key])\n            this.register.trigger(this.name, {type: 'update'});\n            return 'update success';\n        }\n        else {\n            return 'Not Find Update Target.';\n        }\n    }\n\n    /*\n     * 将where语句查询到的全部条目update成同一个值\n     */\n    updateAll = (obj) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        result.forEach(item => {\n            Object.keys(obj).forEach(key => item[key] = obj[key])\n        })\n        this.register.trigger(this.name, {type: 'update'});\n        return 'update success';\n\n    }\n\n    /*\n     * 将where语句查询到的全部条目跟传入的数字进行key对比，key值相同的进行update\n     */\n    updateByKey = (arr, key) => {\n        if (!isArray(arr) || !isString(key)) {\n            this.dbOpts.onError('updateByKey first param should be array, second param should be string', [arr, key]);\n            return;\n        }\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        result.forEach(line => Object.assign(line, arr.find(item => item[key] == line[key])));\n\n        this.register.trigger(this.name, {type: 'update'});\n        return 'updateByKey success';\n    }\n\n\n    /*\n     * 删除通过where语句查询到的条目\n     */\n    delete = () => {\n        try {\n            let result = this[tmp];\n            this[tmp] = this[store];\n            result.forEach(item => {\n                var index = this[store].indexOf(item);\n                if (index > -1) {\n                    this[store].splice(index, 1);\n                }\n            });\n            this.register.trigger(this.name);\n            return 'delete success';\n        } catch(e) {\n            console.log(e);\n        }\n        return this;\n    }\n\n\n    bindFn = (fn) => {\n        this.register.on(this.name, fn);\n        return this;\n    }\n\n    unbindFn = (fn) => {\n        this.register.off(this.name, fn);\n        return this;\n    }\n\n}\n\nexport default Table;","import {isArray, isObj, isFunction, isString} from './utils';\nimport Table from './table';\nimport Observer from './observer';\n\nconst tables = Symbol('tables');\n\nconst defaultOpts = {\n    onError : (err, passData) => console.error(err, passData),\n    onMessage : (msg, data) => console.log(msg, data),\n    onChange : (msg, table, type, data) => console.log(msg, table, type, data),\n    onQuery : (msg, table, query, data) => console.log(msg, table, query, data)\n}\n\nclass DB {\n    constructor(opts = {}) {\n        this[tables] = {};\n        this.opts = Object.assign(defaultOpts, opts);\n        this.register = new Observer();\n    }\n\n    // 快速关联db和react组件的高阶组件 @db.dbconnectReact(table1, table2, table3)\n    dbconnectReact = (...args) => {\n        var self = this;\n        return target => {\n            return class Inheritance extends target {\n                constructor(props) {\n                    super(props);\n                    this.fnList = [];\n                    this.args = args;\n                    this.bindTable = () => {\n                        if (this.args.length) {\n                            this.args.forEach(tableName => {\n                                var fn = () => this.setState({});\n                                var table = isString(tableName) ? self.table(tableName) : tableName;\n                                if (table) {\n                                    table.bindFn(fn);\n                                    this.fnList.push({table: table, fn: fn})\n                                }\n                            });\n                            if (this.args.length === this.fnList.length) {\n                                this.binded = true;\n                            }\n                        }\n                    }\n                    this.bindTable();\n                }\n\n                componentWillMount = () => {\n                    super.componentWillMount && super.componentWillMount();\n                    //如果在构造器阶段未绑定成功，在runtime阶段再绑定一次\n                    !this.binded && this.bindTable()\n                }\n\n                componentWillUnmount = () => {\n                    super.componentWillUnmount && super.componentWillUnmount();\n                    this.fnList.forEach(fnMap => {\n                        fnMap.table.unbindFn(fnMap.fn);\n                    });\n                }\n            }\n        }\n    }\n\n    dbconnectVue = (...args) => {\n        var fnList = [];\n        var self = this;\n        return {\n            methods: {\n                _state_db_update_fn: function() {\n                    this.$forceUpdate();\n                }\n            },\n            created: function() {\n                if (args.length) {\n                    args.forEach(tableName => {\n                        var table = isString(tableName) ? self.table(tableName) : tableName;\n                        if (table) {\n                            table.bindFn(this._state_db_update_fn);\n                            fnList.push({table: table, fn: this._state_db_update_fn})\n                        }\n                    });\n                }\n            },\n\n            beforeDestroy: function() {\n                fnList.forEach(fnMap => {\n                    fnMap.table.unbindFn(fnMap.fn);\n                });\n            }\n        }\n    }\n\n    createTable = (opts) => {\n        if (!isObj(opts)) {\n            this.opts.onError('createTable must pass in an Object', opts);\n            return;\n        }\n        if (!opts.name) {\n            this.opts.onError('opts.name is required', opts);\n            return;\n        }\n        if (this[tables][opts.name]) {\n            this.opts.onError('opts.name are already exists', opts);\n            return;\n        }\n        opts.dbOpts = this.opts\n        const table = new Table(opts);\n        this[tables][opts.name] = table;\n        this.register.trigger('db_event', Object.assign(opts, {type: 'create_table'}));\n        return table;\n    }\n\n    table = (name) => {\n        const table = this[tables][name];\n        if (!table) {\n            console.log('Can not find table ' + name);\n        }\n        else {\n            return table\n        }\n\n    }\n\n    getTables = () => {\n        return this[tables];\n    }\n\n    drop = (name) => {\n        delete this[tables][name];\n        this.register.trigger('db_event', {tablename: name, type: 'drop_table'});\n    }\n\n    clear = () => {\n        for (let i in this[tables]) {\n            delete this[tables][i];\n        }\n        this.register.trigger('db_event', {type: 'clear'});\n    }\n\n    bindFn = (fn) => {\n        this.register.on('db_event', fn);\n    }\n\n    unbindFn = (fn) => {\n        this.register.off('db_event', fn);\n    }\n}\n\nexport default DB;"],"names":["isArray","v","Object","prototype","toString","call","isObj","isFunction","isString","getType","typeStr","replace","Observer","constructor","name","fn","actionArr","actions","includes","push","index","indexOf","splice","params","fnList","length","i","store","Symbol","tmp","Table","opts","query","filter","line","eval","n","column","primaryKey","sort","a","b","columnA","columnB","columns","result","JSON","parse","stringify","arr","lines","_beforeSave","forEach","item","checkschema","register","trigger","dbOpts","onChange","key","data","filterKey","setPrimaryKey","_insert","onError","type","count","insertCount","obj","keys","assign","find","e","console","log","on","off","schema","schemaMode","saveMode","required","undefined","value","concat","initValue","init","insert","tables","defaultOpts","err","passData","error","onMessage","msg","table","onQuery","DB","args","self","target","Inheritance","props","componentWillMount","binded","bindTable","componentWillUnmount","fnMap","unbindFn","tableName","setState","bindFn","methods","_state_db_update_fn","$forceUpdate","created","beforeDestroy","tablename"],"mappings":"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"}