{"version":3,"file":"bundle.esm.js","sources":["../src/utils.js","../src/observer.js","../src/table.js","../src/db.js"],"sourcesContent":["const isArray = (v) => Object.prototype.toString.call(v) === \"[object Array]\"\nconst isObj = (v) => Object.prototype.toString.call(v) === \"[object Object]\"\nconst isFunction = (v) => Object.prototype.toString.call(v) === \"[object Function]\"\nconst isString = (v) => Object.prototype.toString.call(v) === \"[object String]\"\nconst isNumber = (v) => Object.prototype.toString.call(v) === \"[object Number]\"\n\nconst getType = (v) => {\n    var typeStr = Object.prototype.toString.call(v);\n    return typeStr.replace('[object ', '').replace(']', '');\n}\nconst errorHanle = (type, e) => {\n\n}\n\nexport {isArray, isObj, isFunction, isString, isNumber, getType, errorHanle}\n\n","import {isArray, isObj, isFunction} from './utils';\n\nclass Observer {\n    constructor() {\n        this.actions = [];\n    }\n\n    on = (name, fn) => {\n        if (isFunction(fn)) {\n            var actionArr = this.actions['on' + name]\n            if (isArray(actionArr) && !actionArr.includes(fn)) {\n                actionArr.push(fn);\n            }\n            else {\n                this.actions['on' + name] = [fn];\n            }\n        }\n    }\n\n    off = (name, fn) => {\n        var actionArr = this.actions['on' + name];\n        if (actionArr) {\n            if (!fn) {\n                actionArr = null;\n            }\n            else {\n                var index = actionArr.indexOf(fn);\n                if (index > -1) {\n                    actionArr.splice(index, 1);\n                }\n            }\n        }\n    }\n\n    trigger = (name, params) => {\n        const fnList = this.actions['on' + name];\n\n        if (fnList && fnList.length) {\n            for (var i = 0; i < fnList.length; i++) {\n                fnList[i](params);\n            }\n        }\n    }\n}\n\nexport default Observer","import {isArray, isObj, isFunction, isString, getType} from './utils';\nimport Observer from './observer';\n\n/*\n * 使用Symbol增强对属性的保护\n */\nconst store = Symbol('store');\nconst tmp = Symbol('tmp');\n\nclass Table {\n    constructor(opts={}) {\n        this.schema = opts.schema || false;\n        //暂未实现， loose: 不符合要求的行不插入，其他正常插入。 strict: 只要有不符合要求的都不允许插入。\n        this.schemaMode = opts.schemaMode || 'loose';\n        /*\n         * saveMode：插数据库前的处理模式：\n         * safe：深度clone default\n         * unsafe: 不处理,\n         * normal: 浅copy\n         */\n        this.saveMode = opts.saveMode || 'safe';\n        this.columns = [];\n        this.queryCache = {};\n        this[store] = [];\n        this.name = opts.name;\n        this.dbOpts = opts.dbOpts || {};\n        this.version = 0;\n        this.setPrimaryKey = () => {};\n        this.checkschema = () => true;\n        if (isObj(this.schema)) {\n            this.checkschema = (line) => {\n                for (var i in this.schema) {\n                    if (this.schema[i].required && line[i] === undefined) {\n                        return false;\n                    }\n                    if (this.schema[i].type && line[i] !== undefined){\n                        if (getType(line[i]) !== this.schema[i].type) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            };\n        }\n\n        if (isString(opts.primaryKey)) {\n            this.primaryKey = opts.primaryKey;\n        }\n        else if (isObj(opts.primaryKey)) {\n            this.primaryKey = opts.primaryKey.name || 'key';\n            if (opts.primaryKey.autoIncrement) {\n                this.setPrimaryKey = (line, value) => {\n                    let data = this[store];\n                    let primaryKey = this.primaryKey;\n                    if (!value) {\n                        if (data.length) {\n                            line[primaryKey] = data[data.length - 1][primaryKey] + 1;\n                        }\n                        else {\n                            line[primaryKey] = 1;\n                        }\n                    }\n                    else {\n                        line[primaryKey] = value;\n                    }\n                }\n            }\n        }\n\n        //数组或者对象存入数据库之前的处理： safe：深度clone, unsafe: 不处理, normal: 浅copy\n        this._beforeSave = (obj) => {\n            if (this.saveMode === 'safe') {\n                return JSON.parse(JSON.stringify(obj));\n            }\n            else if (this.saveMode === 'unsafe') {\n                return obj;\n            }\n            if (isArray(obj)) {\n                return obj.concat([]);\n            }\n            else if (isObj(obj)) {\n                return Object.assign({}, obj);\n            }\n        }\n\n        this.register = new Observer();\n\n        /*\n         * 数据库发生变化后，queryCache清空\n         */\n        this.register.on(this.name, () => {\n            this.queryCache = {};\n        });\n        if (isArray(opts.initValue)) {\n            this.init(opts.initValue);\n        }\n        else if (isObj(opts.initValue)) {\n            this.insert(opts.initValue);\n        }\n\n        this[tmp] = this[store];\n    }\n\n    _commonOnChange = (message) => {\n        this.version++;\n        this[tmp] = this[store];\n        this.register.trigger(this.name, message);\n    }\n\n    /*\n     * 支持链式调用，但不支持多个where链式调用\n     */\n    where = (query) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return eval(query);\n        });\n        /*\n         * 将当前query缓存一下，下次操作被覆盖\n         */\n        this.currentQuery = query.trim();\n\n        return this;\n    }\n\n    first = (n) => {\n        this[tmp] = this[tmp].filter((line, index) => {\n            return index < n;\n        })\n        return this;\n    }\n\n    last = (n) => {\n        this[tmp] = this[tmp].filter((line, index) => {\n            return index > this[store].length - n - 1;\n        })\n        return this;\n    }\n\n    eq = (k, v) => {\n        this[tmp] = this[tmp].filter((line, index) => {\n            return line[k] === v;\n        })\n        return this;\n    }\n\n    in = (k, arr) => {\n        this[tmp] = this[tmp].filter((line, index) => {\n            return arr.indexOf(line[k]) > -1;\n        })\n        return this;\n    }\n\n    filter = (k, compare, v) => {\n        this[tmp] = this[tmp].filter((line, index) => {\n            if (compare === '==='){\n                return line[k] === v;\n            }\n            if (compare === '==='){\n                return line[k] === v;\n            }\n            if (compare === '>='){\n                return line[k] >= v;\n            }\n            if (compare === '<='){\n                return line[k] <= v;\n            }\n            if (compare === '>'){\n                return line[k] > v;\n            }\n            if (compare === '<'){\n                return line[k] < v;\n            }\n            if (compare === '!=='){\n                return line[k] !== v;\n            }\n            if (compare === '!='){\n                return line[k] != v;\n            }\n        })\n        return this;\n    }\n\n    /*\n     * 根据某一个字段的值进行默认行为排序\n     */\n    orderby = (column = primaryKey) => {\n        if (column) {\n            this[tmp].sort((a, b) => {\n                var columnA = a[column]\n                var columnB = b[column]\n                if (columnA < columnB) {\n                    return -1;\n                }\n                if (columnA > columnB) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /*\n     * 返回查找到的数组，不使用缓存\n     */\n    getValues = (type) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n        if ( type === 'safe') {\n            return JSON.parse(JSON.stringify(result));\n        }\n        else if (!type || type === 'unsafe' || type === 'view'){\n            return result;\n        }\n    }\n\n    /*\n     * 返回查找到的数组, 并且会使用缓存, 因为主要用于快速取值，所采用unsafe模式，需注意\n     */\n    get values() {\n        let result = this[tmp];\n        this[tmp] = this[store];\n        /*\n         * 优先使用缓存值，当执行增删改操作后，缓存会清除\n         */\n        const cacheValue = this.queryCache[this.currentQuery];\n\n        if (cacheValue) {\n            return cacheValue;\n        }\n        else {\n            this.queryCache[this.currentQuery] = result;\n            return this.queryCache[this.currentQuery];\n        }\n    }\n\n    /*\n     * 返回查询后数组长度\n     */\n    count = () => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        return result.length;\n    }\n\n    /*\n     * 返回整体数组长度\n     */\n    countAll = () => {\n        return this[store].length;\n    }\n\n    /*\n     * 初始化表,如果表在创建时指定了schema，需要对数组字段进行强校验\n     */\n    init = (arr = []) => {\n        var lines = this._beforeSave(arr);\n        this[store].length = 0;\n        lines.forEach((item) => {\n            if (this.checkschema(item)) {\n                this[store].push(item);\n            }\n        });\n        this._commonOnChange(); //触发更新广播\n        this.dbOpts.onChange('Table ' + this.name + ' init Success', this, 'init', lines);\n        return this;\n    }\n\n    /*\n     * 通用的插入单条方法，仅内部使用, 如果有指定key，则可能进行update操作\n     */\n    _insert = (line, key) => {\n        const data = this[store];\n        const filterKey = key || this.primaryKey;\n        if (this.checkschema(line)) {\n            this.setPrimaryKey(line);\n            if (!isString(filterKey)) {\n                data.push(line);\n                return line[filterKey] || true;\n            }\n            else {\n                for (let i = 0; i < data.length; i++) {\n                    if (data[i][filterKey] === line[filterKey]) {\n                        // data[i] = line;\n                        Object.keys(line).forEach(key => data[i][key] = line[key])\n                        return line[filterKey] || true;\n                    }\n                }\n                data.push(line);\n                return line[filterKey] || true;\n            }\n        }\n    }\n    /*\n     * 插入一条或多条数据, 如果有key, 则可能进行update操作\n     */\n    insert = (item, key) => {\n        const keys = [];\n        if (isObj(item)) {\n            var line = this._beforeSave(item);\n            var kv = this._insert(line, key)\n            if (!kv) {\n                this.dbOpts.onError('Insert item not match the schema.', item);\n            }\n            else {\n                this.register.trigger(this.name, {type: 'insert', count: 1, insertCount: 1});\n                this.dbOpts.onChange('Table ' + this.name + ' insert Success', this, 'init', item);\n                keys.push(kv);\n            }\n        }\n        else if (isArray(item)) {\n            var lines = this._beforeSave(item);\n            var insertCount = 0;\n            lines.forEach(line => {\n                var kv = this._insert(line, key)\n                if (kv) {\n                    insertCount += 1;\n                    keys.push(kv);\n                }\n            })\n            if (insertCount) {\n                this._commonOnChange({type: 'insert', count: item.length, insertCount: insertCount})\n            }\n            else {\n                this.dbOpts.onError('All Insert item not match the schema.', item);\n            }\n        }\n        else {\n            this.dbOpts.onError('Insert item type must be array or object', item);\n        }\n        return keys;\n\n    }\n\n\n    /*\n     * 将where语句查询到的条目进行update, 但只update查到的第一条\n     */\n    update = (obj) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n        var obj = this._beforeSave(obj);\n\n        if (result[0]) {\n            Object.keys(obj).forEach(key => result[0][key] = obj[key]);\n            this._commonOnChange({type: 'update'});\n            return 'update success';\n        }\n        else {\n            return 'Not Find Update Target.';\n        }\n    }\n\n    /*\n     * 将where语句查询到的全部条目update成同一个值\n     */\n    updateAll = (obj) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n        var obj = this._beforeSave(obj);\n\n        result.forEach(item => {\n            Object.keys(obj).forEach(key => item[key] = obj[key])\n        });\n        this._commonOnChange({type: 'update'});\n        return 'update success';\n\n    }\n\n    /*\n     * 将where语句查询到的全部条目跟传入的数字进行key对比，key值相同的进行update\n     */\n    updateByKey = (arr, key) => {\n        if (!isArray(arr) || !isString(key)) {\n            this.dbOpts.onError('updateByKey first param should be array, second param should be string', [arr, key]);\n            return;\n        }\n        let result = this[tmp];\n        this[tmp] = this[store];\n        var arr = this._beforeSave(arr);\n\n        result.forEach(line => Object.assign(line, arr.find(item => item[key] == line[key])));\n\n        this._commonOnChange({type: 'update'});\n        return 'updateByKey success';\n    }\n\n\n    /*\n     * 删除通过where语句查询到的条目\n     */\n    delete = () => {\n        try {\n            let result = this[tmp].concat([]);\n            this[tmp] = this[store];\n\n            for (let i = 0, l = result.length; i < l; i++ ) {\n\n                (function(i, store){\n                    let index = store.indexOf(result[i]);\n                    index > -1 && store.splice(index, 1);\n                })(i, this[store])\n            }\n\n            this._commonOnChange({type: 'delete'})\n            return 'delete success';\n        } catch(e) {\n            console.log(e);\n        }\n        return this;\n    }\n\n\n    bindFn = (fn) => {\n        this.register.on(this.name, fn);\n        return this;\n    }\n\n    unbindFn = (fn) => {\n        this.register.off(this.name, fn);\n        return this;\n    }\n\n}\n\nexport default Table;","import {isArray, isObj, isFunction, isString, isNumber} from './utils';\nimport Table from './table';\nimport Observer from './observer';\n\nconst tables = Symbol('tables');\n\nconst defaultOpts = {\n    onError : (err, passData) => console.error(err, passData),\n    onMessage : (msg, data) => console.log(msg, data),\n    onChange : (msg, table, type, data) => console.log(msg, table, type, data),\n    onQuery : (msg, table, query, data) => console.log(msg, table, query, data),\n    vueUpdateTimeout: 0\n}\n\nclass DB {\n    constructor(opts = {}) {\n        this[tables] = {};\n        this.opts = Object.assign(defaultOpts, opts);\n        this.register = new Observer();\n    }\n\n    // 快速关联db和react组件的高阶组件 @db.dbconnectReact(table1, table2, table3)\n    dbconnectReact = (...args) => {\n        var self = this;\n        return target => {\n            return class Inheritance extends target {\n                constructor(props) {\n                    super(props);\n                    this.fnList = [];\n                    this.args = args;\n                    this.bindTable = () => {\n                        if (this.args.length) {\n                            this.args.forEach(tableName => {\n                                var fn = () => this.setState({});\n                                var table = isString(tableName) ? self.table(tableName) : tableName;\n                                if (table) {\n                                    table.bindFn(fn);\n                                    this.fnList.push({table: table, fn: fn})\n                                }\n                            });\n                            if (this.args.length === this.fnList.length) {\n                                this.binded = true;\n                            }\n                        }\n                    }\n                    this.bindTable();\n                }\n\n                componentWillMount = () => {\n                    super.componentWillMount && super.componentWillMount();\n                    //如果在构造器阶段未绑定成功，在runtime阶段再绑定一次\n                    !this.binded && this.bindTable()\n                }\n\n                componentWillUnmount = () => {\n                    super.componentWillUnmount && super.componentWillUnmount();\n                    this.fnList.forEach(fnMap => {\n                        fnMap.table.unbindFn(fnMap.fn);\n                    });\n                }\n            }\n        }\n    }\n\n    /*\n     * forceUpdate不能触发子组件渲染，此处和react不同。\n     */\n    dbconnectVue = (...args) => {\n        var self = this;\n        var timeout = self.opts.vueUpdateTimeout;\n        return {\n            methods: {\n                _state_db_update_fn: function() {\n                    //100ms内触发的update复用同一个$forceUpdate()\n                    if (timeout) {\n                        if (!this.updateFlag) {\n                            this.updateFlag = 1;\n                            setTimeout(() => {\n                                this.$forceUpdate();\n                                this.updateFlag = 0;\n                            }, timeout);\n                        }\n                    }\n                    else {\n                        this.$forceUpdate();\n                    }\n                }\n            },\n            created: function() {\n                this.fnList = [];\n                this.updateFlag = 0;\n                if (args.length) {\n                    args.forEach(tableName => {\n                        var table = isString(tableName) ? self.table(tableName) : tableName;\n                        if (table) {\n                            table.bindFn(this._state_db_update_fn);\n                            this.fnList.push({table: table, fn: this._state_db_update_fn})\n                        }\n                    });\n                }\n                else {\n                    //如果不传参，开启监听所有表\n                    for (let i in self[tables]) {\n                        var table = self[tables][i]\n                        table.bindFn(this._state_db_update_fn);\n                        this.fnList.push({table: table, fn: this._state_db_update_fn});\n                    }\n                }\n                self.bindFn(this._state_db_update_fn);\n            },\n\n            beforeDestroy: function() {\n                this.fnList.forEach(fnMap => {\n                    fnMap.table.unbindFn(fnMap.fn);\n                });\n            }\n        }\n    }\n\n\n    createTable = (opts) => {\n        if (!isObj(opts)) {\n            this.opts.onError('createTable must pass in an Object', opts);\n            return;\n        }\n        if (!opts.name) {\n            this.opts.onError('opts.name is required', opts);\n            return;\n        }\n        if (this[tables][opts.name]) {\n            this.opts.onError('opts.name are already exists', opts);\n            return;\n        }\n        opts.dbOpts = this.opts\n        const table = new Table(opts);\n        this[tables][opts.name] = table;\n        this.register.trigger('db_event', Object.assign(opts, {type: 'create_table'}));\n        return table;\n    }\n\n    table = (name) => {\n        const table = this[tables][name];\n        if (!table) {\n            this.opts.onError('Can not find table ' + name);\n        }\n        else {\n            return table\n        }\n\n    }\n\n    getTables = () => {\n        return this[tables];\n    }\n\n    drop = (name) => {\n        delete this[tables][name];\n        this.register.trigger('db_event', {tablename: name, type: 'drop_table'});\n    }\n\n    clear = () => {\n        for (let i in this[tables]) {\n            delete this[tables][i];\n        }\n        this.register.trigger('db_event', {type: 'clear'});\n    }\n\n    transaction = () => {\n        /*\n         * 事务机制\n         */\n    }\n\n    bindFn = (fn) => {\n        this.register.on('db_event', fn);\n    }\n\n    unbindFn = (fn) => {\n        this.register.off('db_event', fn);\n    }\n}\n\nexport default DB;"],"names":["isArray","v","Object","prototype","toString","call","isObj","isFunction","isString","getType","typeStr","replace","Observer","constructor","name","fn","actionArr","actions","includes","push","index","indexOf","splice","params","fnList","length","i","store","Symbol","tmp","Table","opts","message","version","register","trigger","query","filter","line","eval","currentQuery","trim","n","k","arr","compare","column","primaryKey","sort","a","b","columnA","columnB","type","result","JSON","parse","stringify","lines","_beforeSave","forEach","item","checkschema","_commonOnChange","dbOpts","onChange","key","data","filterKey","setPrimaryKey","keys","kv","_insert","onError","count","insertCount","obj","assign","find","concat","l","e","console","log","on","off","schema","schemaMode","saveMode","columns","queryCache","required","undefined","autoIncrement","value","initValue","init","insert","values","cacheValue","tables","defaultOpts","err","passData","error","onMessage","msg","table","onQuery","vueUpdateTimeout","DB","args","self","target","Inheritance","props","componentWillMount","binded","bindTable","componentWillUnmount","fnMap","unbindFn","tableName","setState","bindFn","timeout","methods","_state_db_update_fn","updateFlag","setTimeout","$forceUpdate","created","beforeDestroy","tablename"],"mappings":"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"}