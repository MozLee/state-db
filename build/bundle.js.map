{"version":3,"file":"bundle.js","sources":["../src/utils.js","../src/observer.js","../src/table.js","../src/db.js"],"sourcesContent":["const isArray = (v) => Object.prototype.toString.call(v) === \"[object Array]\"\nconst isObj = (v) => Object.prototype.toString.call(v) === \"[object Object]\"\nconst isFunction = (v) => Object.prototype.toString.call(v) === \"[object Function]\"\nconst isString = (v) => Object.prototype.toString.call(v) === \"[object String]\"\n\nconst getType = (v) => {\n    var typeStr = Object.prototype.toString.call(v);\n    return typeStr.replace('[object ', '').replace(']', '');\n}\nconst errorHanle = (type, e) => {\n\n}\n\nexport {isArray, isObj, isFunction, isString, getType, errorHanle}\n\n","import {isArray, isObj, isFunction} from './utils';\n\nclass Observer {\n    constructor() {\n        this.actions = [];\n    }\n\n    on = (name, fn) => {\n        if (isFunction(fn)) {\n            var actionArr = this.actions['on' + name]\n            if (isArray(actionArr) && !actionArr.includes(fn)) {\n                actionArr.push(fn);\n            }\n            else {\n                this.actions['on' + name] = [fn];\n            }\n        }\n    }\n\n    off = (name, fn) => {\n        var actionArr = this.actions['on' + name];\n        if (actionArr) {\n            if (!fn) {\n                actionArr = null;\n            }\n            else {\n                var index = actionArr.indexOf(fn);\n                if (index > -1) {\n                    actionArr.splice(index, 1);\n                }\n            }\n        }\n    }\n\n    trigger = (name, params) => {\n        const fnList = this.actions['on' + name];\n\n        if (fnList && fnList.length) {\n            for (var i = 0; i < fnList.length; i++) {\n                fnList[i](params);\n            }\n        }\n    }\n}\n\nexport default Observer","import {isArray, isObj, isFunction, isString, getType} from './utils';\nimport Observer from './observer';\n\n/*\n * 使用Symbol增强对属性的保护\n */\nconst store = Symbol('store');\nconst tmp = Symbol('tmp');\n\nclass Table {\n    constructor(opts={}) {\n        this.scheme = opts.scheme || false;\n        //暂未实现， loose: 不符合要求的行不插入，其他正常插入。 strict: 只要有不符合要求的都不允许插入。\n        this.schemeMode = opts.schemeMode || 'loose';\n        /*\n         * safe：深度clone default\n         * unsafe: 不处理,\n         * normal: 浅copy\n         */\n        this.saveMode = opts.saveMode || 'safe';\n        this.columns = [];\n\n        this[store] = [];\n        this.name = opts.name;\n        this.dbOpts = opts.dbOpts || {};\n        this.setPrimaryKey = () => {};\n        this.checkScheme = () => true;\n        if (isObj(this.scheme)) {\n            this.checkScheme = (line) => {\n                for (var i in this.scheme) {\n                    if (this.scheme[i].required && line[i] === undefined) {\n                        return false;\n                    }\n                    if (this.scheme[i].type && line[i] !== undefined){\n                        if (getType(line[i]) !== this.scheme[i].type) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            };\n        }\n\n        if (isString(opts.primaryKey)) {\n            this.primaryKey = opts.primaryKey;\n        }\n        else if (isObj(opts.primaryKey)) {\n            this.primaryKey = primaryKey.name || 'key';\n            this.setPrimaryKey = (line, value) => {\n                let data = this[store];\n                let primaryKey = this.primaryKey;\n                if (!value) {\n                    if (data.length) {\n                        line[primaryKey] = data[data.length - 1][primaryKey] + 1;\n                    }\n                    else {\n                        line[primaryKey] = 1;\n                    }\n                }\n                else {\n                    line[primaryKey] = value;\n                }\n            }\n        }\n\n        //数组或者对象存入数据库之前的处理： safe：深度clone, unsafe: 不处理, normal: 浅copy\n        this._beforeSave = (obj) => {\n            if (this.saveMode === 'safe') {\n                return JSON.parse(JSON.stringify(obj));\n            }\n            else if (this.saveMode === 'unsafe') {\n                return obj;\n            }\n            if (isArray(obj)) {\n                return obj.concat([]);\n            }\n            else if (isObj(obj)) {\n                return Object.assign({}, obj);\n            }\n        }\n\n        this.register = new Observer();\n        if (isArray(opts.initValue)) {\n            this.init(opts.initValue);\n        }\n        else if (isObj(opts.initValue)) {\n            this.insert(opts.initValue);\n        }\n\n        this[tmp] = this[store];\n    }\n\n    /*\n     * 支持链式调用，但不支持多个where链式调用\n     */\n    where = (query) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return eval(query);\n        });\n        return this;\n    }\n\n    first = (n) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return index < n;\n        })\n        return this;\n    }\n\n    last = (n) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return index > this[store].length - n - 1;\n        })\n        return this;\n    }\n\n    /*\n     * 根据某一个字段的值进行默认行为排序\n     */\n    orderby = (column = primaryKey) => {\n        if (column) {\n            this[tmp].sort((a, b) => {\n                var columnA = a[column]\n                var columnB = b[column]\n                if (columnA < columnB) {\n                    return -1;\n                }\n                if (columnA > columnB) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /*\n     * 返回查找到的数组，如果没有字段名，则返回全部字段，如果有字段名，则返回指定字段\n     */\n    getValues = (columns) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        if (!columns) {\n            return JSON.parse(JSON.stringify(result));\n        }\n        else if (isArray(columns)) {\n            let tmpArr = [];\n            result.forEach(item => {\n                item\n            })\n        }\n    }\n\n    /*\n     * 返回查询后数组长度\n     */\n    count = () => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        return result.length;\n    }\n\n    /*\n     * 返回整体数组长度\n     */\n    countAll = () => {\n        return this[store].length;\n    }\n\n    /*\n     * 初始化表,如果表在创建时指定了scheme，需要对数组字段进行强校验\n     */\n    init = (arr = []) => {\n        var lines = this._beforeSave(arr);\n        this[store].length = 0;\n        lines.forEach((item) => {\n            if (this.checkScheme(item)) {\n                this[store].push(item);\n            }\n        });\n        this.register.trigger(this.name); //触发更新广播\n        this.dbOpts.onChange('Table ' + this.name + ' init Success', this, 'init', lines);\n        return this;\n    }\n\n    /*\n     * 通用的插入单条方法，仅内部使用, 如果有指定key，则可能进行update操作\n     */\n    _insert = (line, key) => {\n        const data = this[store];\n        const filterKey = key || this.primaryKey;\n        if (this.checkScheme(line)) {\n            this.setPrimaryKey(line);\n            if (!isString(filterKey)) {\n                data.push(line);\n                return true;\n            }\n            else {\n                for (let i; i < data.length; i++) {\n                    if (data[i][filterKey] === line[filterKey]) {\n                        data[i] = line;\n                        return true\n                    }\n                }\n                if (!flag) {\n                    data.push(line);\n                    return true\n                }\n            }\n        }\n    }\n    /*\n     * 插入一条或多条数据, 如果有key, 则可能进行update操作\n     */\n    insert = (item, key) => {\n        if (isObj(item)) {\n            var line = this._beforeSave(item);\n            if (!this._insert(line, key)) {\n                this.dbOpts.onError('Insert item not match the scheme.', item);\n            }\n            else {\n                this.register.trigger(this.name, {type: 'insert', count: 1, insertCount: 1});\n                this.dbOpts.onChange('Table ' + this.name + ' insert Success', this, 'init', item);\n            }\n        }\n        else if (isArray(item)) {\n            var lines = this._beforeSave(item);\n            var insertCount = 0;\n            lines.forEach(line => {\n                if (this._insert(line, key)) {\n                    insertCount += 1;\n                }\n            })\n            if (insertCount) {\n                this.register.trigger(this.name, {type: 'insert', count: item.length, insertCount: insertCount});\n            }\n            else {\n                this.dbOpts.onError('All Insert item not match the scheme.', item);\n            }\n        }\n        else {\n            this.dbOpts.onError('Insert item type must be array or object', item);\n        }\n        return this;\n    }\n\n\n    /*\n     * 将where语句查询到的条目进行update, 但只update查到的第一条\n     */\n    update = (obj) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        if (result[0]) {\n            Object.keys(obj).forEach(key => result[0][key] = obj[key])\n            this.register.trigger(this.name, {type: 'update'});\n            return 'update success';\n        }\n        else {\n            return 'Not Find Update Target.';\n        }\n    }\n\n    /*\n     * 将where语句查询到的全部条目update成同一个值\n     */\n    updateAll = (obj) => {\n        this.register.trigger(this.name);\n        return [];\n    }\n\n    /*\n     * 将where语句查询到的全部条目进行update\n     */\n    updateByKey = (arr, keys) => {\n\n\n        this.register.trigger(this.name);\n        return [];\n    }\n\n\n    /*\n     * 将where语句查询到的全部条目进行update\n     */\n    replaceByColumn(column = this.primaryKey, values) {\n        this.register.trigger(this.name);\n    }\n\n\n    /*\n     * 删除通过where语句查询到的条目\n     */\n    delete = () => {\n        try {\n            let result = this[tmp];\n            this[tmp] = this[store];\n            result.forEach(item => {\n                var index = this[store].indexOf(item);\n                if (index > -1) {\n                    this[store].splice(index, 1);\n                }\n            });\n            this.register.trigger(this.name);\n            return 'delete success';\n        } catch(e) {\n            console.log(e);\n        }\n        return this;\n    }\n\n\n    bindFn = (fn) => {\n        this.register.on(this.name, fn);\n        return this;\n    }\n\n    unbindFn = (fn) => {\n        this.register.off(this.name, fn);\n        return this;\n    }\n\n}\n\nexport default Table;","import {isArray, isObj, isFunction, isString} from './utils';\nimport Table from './table';\nimport Observer from './observer';\n\nconst tables = Symbol('tables');\n\nconst defaultOpts = {\n    onError : (err, passData) => console.error(err, passData),\n    onMessage : (msg, data) => console.log(msg, data),\n    onChange : (msg, table, type, data) => console.log(msg, table, type, data),\n    onQuery : (msg, table, query, data) => console.log(msg, table, query, data)\n}\n\nclass DB {\n    constructor(opts = {}) {\n        this[tables] = {};\n        this.opts = Object.assign(defaultOpts, opts);\n        this.register = new Observer();\n    }\n\n    // 快速关联db和react组件的高阶组件 @db.dbconnectReact(table1, table2, table3)\n    dbconnectReact = (...args) => {\n        var self = this;\n        return target => {\n            return class Inheritance extends target {\n                constructor(props) {\n                    super(props);\n                    this.fnList = [];\n                    this.args = args;\n                    this.bindTable = () => {\n                        if (this.args.length) {\n                            this.args.forEach(tableName => {\n                                var fn = () => this.setState({});\n                                var table = isString(tableName) ? self.table(tableName) : tableName;\n                                if (table) {\n                                    table.bindFn(fn);\n                                    this.fnList.push({table: table, fn: fn})\n                                }\n                            });\n                            if (this.args.length === this.fnList.length) {\n                                this.binded = true;\n                            }\n                        }\n                    }\n                    this.bindTable();\n                }\n\n                componentWillMount = () => {\n                    super.componentWillMount && super.componentWillMount();\n                    //如果在构造器阶段未绑定成功，在runtime阶段再绑定一次\n                    !this.binded && this.bindTable()\n                }\n\n                componentWillUnmount = () => {\n                    super.componentWillUnmount && super.componentWillUnmount();\n                    this.fnList.forEach(fnMap => {\n                        fnMap.table.unbindFn(fnMap.fn);\n                    });\n                }\n            }\n        }\n    }\n\n    dbconnectVue = (...args) => {\n        var fnList = [];\n        var self = this;\n        return {\n            methods: {\n                _state_db_update_fn: function() {\n                    this.$forceUpdate();\n                }\n            },\n            created: function() {\n                if (args.length) {\n                    args.forEach(tableName => {\n                        var table = isString(tableName) ? self.table(tableName) : tableName;\n                        if (table) {\n                            table.bindFn(this._state_db_update_fn);\n                            fnList.push({table: table, fn: this._state_db_update_fn})\n                        }\n                    });\n                }\n            },\n\n            beforeDestroy: function() {\n                fnList.forEach(fnMap => {\n                    fnMap.table.unbindFn(fnMap.fn);\n                });\n            }\n        }\n    }\n\n    createTable = (opts) => {\n        if (!isObj(opts)) {\n            this.opts.onError('createTable must pass in an Object', opts);\n            return;\n        }\n        if (!opts.name) {\n            this.opts.onError('opts.name is required', opts);\n            return;\n        }\n        if (this[tables][opts.name]) {\n            this.opts.onError('opts.name are already exists', opts);\n            return;\n        }\n        opts.dbOpts = this.opts\n        const table = new Table(opts);\n        this[tables][opts.name] = table;\n        this.register.trigger('db_event', Object.assign(opts, {type: 'create_table'}));\n        return table;\n    }\n\n    table = (name) => {\n        const table = this[tables][name];\n        if (!table) {\n            console.log('Can not find table ' + name);\n        }\n        else {\n            return table\n        }\n\n    }\n\n    getTables = () => {\n        return this[tables];\n    }\n\n    drop = (name) => {\n        delete this[tables][name];\n        this.register.trigger('db_event', {tablename: name, type: 'drop_table'});\n    }\n\n    clear = () => {\n        for (let i in this[tables]) {\n            delete this[tables][i];\n        }\n        this.register.trigger('db_event', {type: 'clear'});\n    }\n\n    bindFn = (fn) => {\n        this.register.on('db_event', fn);\n    }\n\n    unbindFn = (fn) => {\n        this.register.off('db_event', fn);\n    }\n}\n\nexport default DB;"],"names":["isArray","v","Object","prototype","toString","call","isObj","isFunction","isString","getType","typeStr","replace","Observer","constructor","name","fn","actionArr","actions","includes","push","index","indexOf","splice","params","fnList","length","i","store","Symbol","tmp","Table","opts","query","filter","line","eval","n","column","primaryKey","sort","a","b","columnA","columnB","columns","result","JSON","parse","stringify","forEach","item","arr","lines","_beforeSave","checkScheme","register","trigger","dbOpts","onChange","key","data","filterKey","setPrimaryKey","flag","_insert","onError","type","count","insertCount","obj","keys","e","console","log","on","off","scheme","schemeMode","saveMode","required","undefined","value","concat","assign","initValue","init","insert","replaceByColumn","values","tables","defaultOpts","err","passData","error","onMessage","msg","table","onQuery","DB","args","self","target","Inheritance","props","componentWillMount","binded","bindTable","componentWillUnmount","fnMap","unbindFn","tableName","setState","bindFn","methods","_state_db_update_fn","$forceUpdate","created","beforeDestroy","tablename"],"mappings":"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"}