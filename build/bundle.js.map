{"version":3,"file":"bundle.js","sources":["../src/utils.js","../src/observer.js","../src/table.js","../src/db.js"],"sourcesContent":["const isArray = (v) => Object.prototype.toString.call(v) === \"[object Array]\"\nconst isObj = (v) => Object.prototype.toString.call(v) === \"[object Object]\"\nconst isFunction = (v) => Object.prototype.toString.call(v) === \"[object Function]\"\nconst isString = (v) => Object.prototype.toString.call(v) === \"[object String]\"\n\nconst getType = (v) => {\n    var typeStr = Object.prototype.toString.call(v);\n    return typeStr.replace('[object ', '').replace(']', '');\n}\nconst errorHanle = (type, e) => {\n\n}\n\nexport {isArray, isObj, isFunction, isString, getType, errorHanle}\n\n","import {isArray, isObj, isFunction} from './utils';\n\nclass Observer {\n    constructor() {\n        this.actions = [];\n    }\n\n    on = (name, fn) => {\n        if (isFunction(fn)) {\n            var actionArr = this.actions['on' + name]\n            if (isArray(actionArr) && !actionArr.includes(fn)) {\n                actionArr.push(fn);\n            }\n            else {\n                this.actions['on' + name] = [fn];\n            }\n        }\n    }\n\n    off = (name, fn) => {\n        var actionArr = this.actions['on' + name];\n        if (actionArr) {\n            if (!fn) {\n                actionArr = null;\n            }\n            else {\n                var index = actionArr.indexOf(fn);\n                if (index > -1) {\n                    actionArr.splice(index, 1);\n                }\n            }\n        }\n    }\n\n    trigger = (name, params) => {\n        const fnList = this.actions['on' + name];\n\n        if (fnList && fnList.length) {\n            for (var i = 0; i < fnList.length; i++) {\n                fnList[i](params);\n            }\n        }\n    }\n}\n\nexport default Observer","import {isArray, isObj, isFunction, isString, getType} from './utils';\nimport Observer from './observer';\n\n/*\n * 使用Symbol增强对属性的保护\n */\nconst store = Symbol('store');\nconst tmp = Symbol('tmp');\n\nclass Table {\n    constructor(opts={}) {\n        this.schema = opts.schema || false;\n        //暂未实现， loose: 不符合要求的行不插入，其他正常插入。 strict: 只要有不符合要求的都不允许插入。\n        this.schemaMode = opts.schemaMode || 'loose';\n        /*\n         * saveMode：插数据库前的处理模式：\n         * safe：深度clone default\n         * unsafe: 不处理,\n         * normal: 浅copy\n         */\n        this.saveMode = opts.saveMode || 'safe';\n        this.columns = [];\n        this.queryCache = {};\n        this[store] = [];\n        this.name = opts.name;\n        this.dbOpts = opts.dbOpts || {};\n        this.setPrimaryKey = () => {};\n        this.checkschema = () => true;\n        if (isObj(this.schema)) {\n            this.checkschema = (line) => {\n                for (var i in this.schema) {\n                    if (this.schema[i].required && line[i] === undefined) {\n                        return false;\n                    }\n                    if (this.schema[i].type && line[i] !== undefined){\n                        if (getType(line[i]) !== this.schema[i].type) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            };\n        }\n\n        if (isString(opts.primaryKey)) {\n            this.primaryKey = opts.primaryKey;\n        }\n        else if (isObj(opts.primaryKey)) {\n            this.primaryKey = opts.primaryKey.name || 'key';\n            if (opts.primaryKey.autoIncrement) {\n                this.setPrimaryKey = (line, value) => {\n                    let data = this[store];\n                    let primaryKey = this.primaryKey;\n                    if (!value) {\n                        if (data.length) {\n                            line[primaryKey] = data[data.length - 1][primaryKey] + 1;\n                        }\n                        else {\n                            line[primaryKey] = 1;\n                        }\n                    }\n                    else {\n                        line[primaryKey] = value;\n                    }\n                }\n            }\n        }\n\n        //数组或者对象存入数据库之前的处理： safe：深度clone, unsafe: 不处理, normal: 浅copy\n        this._beforeSave = (obj) => {\n            if (this.saveMode === 'safe') {\n                return JSON.parse(JSON.stringify(obj));\n            }\n            else if (this.saveMode === 'unsafe') {\n                return obj;\n            }\n            if (isArray(obj)) {\n                return obj.concat([]);\n            }\n            else if (isObj(obj)) {\n                return Object.assign({}, obj);\n            }\n        }\n\n        this.register = new Observer();\n\n        /*\n         * 数据库发生变化后，queryCache清空\n         */\n        this.register.on(this.name, () => {\n            this.queryCache = {};\n        });\n        if (isArray(opts.initValue)) {\n            this.init(opts.initValue);\n        }\n        else if (isObj(opts.initValue)) {\n            this.insert(opts.initValue);\n        }\n\n        this[tmp] = this[store];\n    }\n\n    /*\n     * 支持链式调用，但不支持多个where链式调用\n     */\n    where = (query) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return eval(query);\n        });\n        /*\n         * 将当前query缓存一下，下次操作被覆盖\n         */\n        this.currentQuery = {\n            query: query.trim(),\n        }\n        return this;\n    }\n\n    first = (n) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return index < n;\n        })\n        return this;\n    }\n\n    last = (n) => {\n        this[tmp] = this[store].filter((line, index) => {\n            return index > this[store].length - n - 1;\n        })\n        return this;\n    }\n\n    /*\n     * 根据某一个字段的值进行默认行为排序\n     */\n    orderby = (column = primaryKey) => {\n        if (column) {\n            this[tmp].sort((a, b) => {\n                var columnA = a[column]\n                var columnB = b[column]\n                if (columnA < columnB) {\n                    return -1;\n                }\n                if (columnA > columnB) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /*\n     * 返回查找到的数组，不使用缓存\n     */\n    getValues = () => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        return JSON.parse(JSON.stringify(result));\n    }\n\n    /*\n     * 返回查找到的数组, 并且会使用缓存\n     */\n    get values() {\n        let result = this[tmp];\n        this[tmp] = this[store];\n        /*\n         * 优先使用缓存值，当执行增删改操作后，缓存会清除\n         */\n        const cacheValue = this.queryCache[this.currentQuery];\n\n        if (cacheValue) {\n            return cacheValue\n        }\n        else {\n            this.queryCache[this.currentQuery] = JSON.parse(JSON.stringify(result));\n            return this.queryCache[this.currentQuery];\n        }\n    }\n\n    /*\n     * 返回查询后数组长度\n     */\n    count = () => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n\n        return result.length;\n    }\n\n    /*\n     * 返回整体数组长度\n     */\n    countAll = () => {\n        return this[store].length;\n    }\n\n    /*\n     * 初始化表,如果表在创建时指定了schema，需要对数组字段进行强校验\n     */\n    init = (arr = []) => {\n        var lines = this._beforeSave(arr);\n        this[store].length = 0;\n        lines.forEach((item) => {\n            if (this.checkschema(item)) {\n                this[store].push(item);\n            }\n        });\n        this.register.trigger(this.name); //触发更新广播\n        this.dbOpts.onChange('Table ' + this.name + ' init Success', this, 'init', lines);\n        return this;\n    }\n\n    /*\n     * 通用的插入单条方法，仅内部使用, 如果有指定key，则可能进行update操作\n     */\n    _insert = (line, key) => {\n        const data = this[store];\n        const filterKey = key || this.primaryKey;\n        if (this.checkschema(line)) {\n            this.setPrimaryKey(line);\n            if (!isString(filterKey)) {\n                data.push(line);\n                return line[filterKey] || true;\n            }\n            else {\n                for (let i = 0; i < data.length; i++) {\n                    if (data[i][filterKey] === line[filterKey]) {\n                        data[i] = line;\n                        return line[filterKey] || true;\n                    }\n                }\n                data.push(line);\n                return line[filterKey] || true;\n            }\n        }\n    }\n    /*\n     * 插入一条或多条数据, 如果有key, 则可能进行update操作\n     */\n    insert = (item, key) => {\n        const keys = [];\n        if (isObj(item)) {\n            var line = this._beforeSave(item);\n            var kv = this._insert(line, key)\n            if (!kv) {\n                this.dbOpts.onError('Insert item not match the schema.', item);\n            }\n            else {\n                this.register.trigger(this.name, {type: 'insert', count: 1, insertCount: 1});\n                this.dbOpts.onChange('Table ' + this.name + ' insert Success', this, 'init', item);\n                keys.push(kv);\n            }\n        }\n        else if (isArray(item)) {\n            var lines = this._beforeSave(item);\n            var insertCount = 0;\n            lines.forEach(line => {\n                var kv = this._insert(line, key)\n                if (kv) {\n                    insertCount += 1;\n                    keys.push(kv);\n                }\n            })\n            if (insertCount) {\n                this.register.trigger(this.name, {type: 'insert', count: item.length, insertCount: insertCount});\n            }\n            else {\n                this.dbOpts.onError('All Insert item not match the schema.', item);\n            }\n        }\n        else {\n            this.dbOpts.onError('Insert item type must be array or object', item);\n        }\n        return keys;\n\n    }\n\n\n    /*\n     * 将where语句查询到的条目进行update, 但只update查到的第一条\n     */\n    update = (obj) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n        var obj = this._beforeSave(obj);\n\n        if (result[0]) {\n            Object.keys(obj).forEach(key => result[0][key] = obj[key])\n            this.register.trigger(this.name, {type: 'update'});\n            return 'update success';\n        }\n        else {\n            return 'Not Find Update Target.';\n        }\n    }\n\n    /*\n     * 将where语句查询到的全部条目update成同一个值\n     */\n    updateAll = (obj) => {\n        let result = this[tmp];\n        this[tmp] = this[store];\n        var obj = this._beforeSave(obj);\n\n        result.forEach(item => {\n            Object.keys(obj).forEach(key => item[key] = obj[key])\n        })\n        this.register.trigger(this.name, {type: 'update'});\n        return 'update success';\n\n    }\n\n    /*\n     * 将where语句查询到的全部条目跟传入的数字进行key对比，key值相同的进行update\n     */\n    updateByKey = (arr, key) => {\n        if (!isArray(arr) || !isString(key)) {\n            this.dbOpts.onError('updateByKey first param should be array, second param should be string', [arr, key]);\n            return;\n        }\n        let result = this[tmp];\n        this[tmp] = this[store];\n        var arr = this._beforeSave(arr);\n\n        result.forEach(line => Object.assign(line, arr.find(item => item[key] == line[key])));\n\n        this.register.trigger(this.name, {type: 'update'});\n        return 'updateByKey success';\n    }\n\n\n    /*\n     * 删除通过where语句查询到的条目\n     */\n    delete = () => {\n        try {\n            let result = this[tmp].concat([]);\n            this[tmp] = this[store];\n\n            for (let i = 0, l = result.length; i < l; i++ ) {\n\n                (function(i, store){\n                    let index = store.indexOf(result[i]);\n                    index > -1 && store.splice(index, 1);\n                })(i, this[store])\n            }\n\n            this.register.trigger(this.name);\n            return 'delete success';\n        } catch(e) {\n            console.log(e);\n        }\n        return this;\n    }\n\n\n    bindFn = (fn) => {\n        this.register.on(this.name, fn);\n        return this;\n    }\n\n    unbindFn = (fn) => {\n        this.register.off(this.name, fn);\n        return this;\n    }\n\n}\n\nexport default Table;","import {isArray, isObj, isFunction, isString} from './utils';\nimport Table from './table';\nimport Observer from './observer';\n\nconst tables = Symbol('tables');\n\nconst defaultOpts = {\n    onError : (err, passData) => console.error(err, passData),\n    onMessage : (msg, data) => console.log(msg, data),\n    onChange : (msg, table, type, data) => console.log(msg, table, type, data),\n    onQuery : (msg, table, query, data) => console.log(msg, table, query, data)\n}\n\nclass DB {\n    constructor(opts = {}) {\n        this[tables] = {};\n        this.opts = Object.assign(defaultOpts, opts);\n        this.register = new Observer();\n    }\n\n    // 快速关联db和react组件的高阶组件 @db.dbconnectReact(table1, table2, table3)\n    dbconnectReact = (...args) => {\n        var self = this;\n        return target => {\n            return class Inheritance extends target {\n                constructor(props) {\n                    super(props);\n                    this.fnList = [];\n                    this.args = args;\n                    this.bindTable = () => {\n                        if (this.args.length) {\n                            this.args.forEach(tableName => {\n                                var fn = () => this.setState({});\n                                var table = isString(tableName) ? self.table(tableName) : tableName;\n                                if (table) {\n                                    table.bindFn(fn);\n                                    this.fnList.push({table: table, fn: fn})\n                                }\n                            });\n                            if (this.args.length === this.fnList.length) {\n                                this.binded = true;\n                            }\n                        }\n                    }\n                    this.bindTable();\n                }\n\n                componentWillMount = () => {\n                    super.componentWillMount && super.componentWillMount();\n                    //如果在构造器阶段未绑定成功，在runtime阶段再绑定一次\n                    !this.binded && this.bindTable()\n                }\n\n                componentWillUnmount = () => {\n                    super.componentWillUnmount && super.componentWillUnmount();\n                    this.fnList.forEach(fnMap => {\n                        fnMap.table.unbindFn(fnMap.fn);\n                    });\n                }\n            }\n        }\n    }\n\n    dbconnectVue = (...args) => {\n        var fnList = [];\n        var self = this;\n        return {\n            methods: {\n                _state_db_update_fn: function() {\n                    this.$forceUpdate();\n                }\n            },\n            created: function() {\n                if (args.length) {\n                    args.forEach(tableName => {\n                        var table = isString(tableName) ? self.table(tableName) : tableName;\n                        if (table) {\n                            table.bindFn(this._state_db_update_fn);\n                            fnList.push({table: table, fn: this._state_db_update_fn})\n                        }\n                    });\n                }\n            },\n\n            beforeDestroy: function() {\n                fnList.forEach(fnMap => {\n                    fnMap.table.unbindFn(fnMap.fn);\n                });\n            }\n        }\n    }\n\n    createTable = (opts) => {\n        if (!isObj(opts)) {\n            this.opts.onError('createTable must pass in an Object', opts);\n            return;\n        }\n        if (!opts.name) {\n            this.opts.onError('opts.name is required', opts);\n            return;\n        }\n        if (this[tables][opts.name]) {\n            this.opts.onError('opts.name are already exists', opts);\n            return;\n        }\n        opts.dbOpts = this.opts\n        const table = new Table(opts);\n        this[tables][opts.name] = table;\n        this.register.trigger('db_event', Object.assign(opts, {type: 'create_table'}));\n        return table;\n    }\n\n    table = (name) => {\n        const table = this[tables][name];\n        if (!table) {\n            this.opts.onError('Can not find table ' + name);\n        }\n        else {\n            return table\n        }\n\n    }\n\n    getTables = () => {\n        return this[tables];\n    }\n\n    drop = (name) => {\n        delete this[tables][name];\n        this.register.trigger('db_event', {tablename: name, type: 'drop_table'});\n    }\n\n    clear = () => {\n        for (let i in this[tables]) {\n            delete this[tables][i];\n        }\n        this.register.trigger('db_event', {type: 'clear'});\n    }\n\n    bindFn = (fn) => {\n        this.register.on('db_event', fn);\n    }\n\n    unbindFn = (fn) => {\n        this.register.off('db_event', fn);\n    }\n}\n\nexport default DB;"],"names":["isArray","v","Object","prototype","toString","call","isObj","isFunction","isString","getType","typeStr","replace","Observer","constructor","name","fn","actionArr","actions","includes","push","index","indexOf","splice","params","fnList","length","i","store","Symbol","tmp","Table","opts","query","filter","line","eval","currentQuery","trim","n","column","primaryKey","sort","a","b","columnA","columnB","result","JSON","parse","stringify","arr","lines","_beforeSave","forEach","item","checkschema","register","trigger","dbOpts","onChange","key","data","filterKey","setPrimaryKey","keys","kv","_insert","onError","type","count","insertCount","obj","assign","find","concat","l","e","console","log","on","off","schema","schemaMode","saveMode","columns","queryCache","required","undefined","autoIncrement","value","initValue","init","insert","values","cacheValue","tables","defaultOpts","err","passData","error","onMessage","msg","table","onQuery","DB","args","self","target","Inheritance","props","componentWillMount","binded","bindTable","componentWillUnmount","fnMap","unbindFn","tableName","setState","bindFn","methods","_state_db_update_fn","$forceUpdate","created","beforeDestroy","tablename"],"mappings":"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"}